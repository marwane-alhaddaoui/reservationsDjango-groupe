# Generated by Django 5.1.2 on 2025-04-15 13:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'prices',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'types',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=60)),
                ('lastname', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'artist',
                'constraints': [models.UniqueConstraint(fields=('firstname', 'lastname'), name='unique_firstname_lastname')],
            },
        ),
        migrations.CreateModel(
            name='ArtistType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='a_artistTypes', to='catalogue.artist')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='t_artistTypes', to='catalogue.type')),
            ],
            options={
                'db_table': 'artist_type',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=6)),
                ('locality', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'localities',
                'constraints': [models.UniqueConstraint(fields=('postal_code', 'locality'), name='unique_postal_code_locality')],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=60, unique=True)),
                ('designation', models.CharField(max_length=60)),
                ('address', models.CharField(max_length=255)),
                ('website', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='locations', to='catalogue.locality')),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255, null=True)),
                ('poster_url', models.CharField(max_length=255, null=True)),
                ('duration', models.PositiveSmallIntegerField(null=True)),
                ('created_in', models.PositiveSmallIntegerField(null=True)),
                ('bookable', models.BooleanField(default=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shows', to='catalogue.location')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('stars', models.PositiveSmallIntegerField()),
                ('validated', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='show', to='catalogue.show')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule', models.DateTimeField()),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='representations', to='catalogue.location')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='representations', to='catalogue.show')),
            ],
            options={
                'db_table': 'representations',
            },
        ),
        migrations.CreateModel(
            name='ArtistTypeShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artistTypeShows', to='catalogue.artisttype')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artistTypeShows', to='catalogue.show')),
            ],
            options={
                'db_table': 'artist_type_show',
            },
        ),
        migrations.CreateModel(
            name='UserMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('langue', models.CharField(max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_meta',
            },
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('slug', 'website'), name='unique_slug_website'),
        ),
        migrations.AlterUniqueTogether(
            name='artisttypeshow',
            unique_together={('show', 'artist_type')},
        ),
    ]
